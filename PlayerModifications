--//Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

--//Variables
local LocalPlayer = Players.LocalPlayer
local Library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/AikaV3rm/UiLib/master/Lib.lua')))()

--//Controls
local WalkSpeed = LocalPlayer.Character.Humanoid.WalkSpeed
local TeleportWalk = false
local Fly = false
local NoClip = false
local OriginalCFrame

--//Tables
local Connections = {}

--//Initialization
local Window = Library:CreateWindow("Katrist's Script Hub")

local Player = Window:CreateFolder("Player")
local Explorer = Window:CreateFolder("Workspace")

--//Disable Connections
for i, Connection in pairs(getconnections(LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("WalkSpeed"))) do
	Connection:Disable()
end

for i, Connection in pairs(getconnections(LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("JumpHeight"))) do
	Connection:Disable()
end

for i, Connection in pairs(getconnections(LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("UseJumpPower"))) do
	Connection:Disable()
end

for i, Connection in pairs(getconnections(LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("MoveDirection"))) do
	Connection:Disable()
end

for i, Connection in pairs(getconnections(LocalPlayer.Character.Humanoid.StateChanged)) do
	Connection:Disable()
end

for i, Connection in pairs(getconnections(LocalPlayer.Character.Humanoid.StateEnabledChanged)) do
	Connection:Disable()
end

for i, Connection in pairs(getconnections(workspace:GetPropertyChangedSignal("Gravity"))) do
	Connection:Disable()
end

--//Local Functions
local function CreateTween()
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local Tween = TweenService:Create(LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(1), {CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame + LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector * WalkSpeed})
		Tween:Play()		
	end
end

local function ToggleSpeed(Value)
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
		if Connections["WalkSpeed"] then
			Connections["WalkSpeed"]:Disconnect()
		end

		WalkSpeed = Value

		Connections["WalkSpeed"] = RunService.Stepped:Connect(function()
			if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") and not TeleportWalk then
				local Humanoid = LocalPlayer.Character.Humanoid

				Humanoid.WalkSpeed = Value
			end
		end)
	end
end

local function ToggleJump(Value)
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
		if Connections["JumpHeight"] then
			Connections["JumpHeight"]:Disconnect()
		end
		
		if Connections["EnableJump"] then
			Connections["EnableJump"]:Disconnect()
		end
		
		local Humanoid = LocalPlayer.Character.Humanoid

		Connections["JumpHeight"] = RunService.Stepped:Connect(function()
			if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
				Humanoid.UseJumpPower = false
				Humanoid.JumpHeight = Value
			end
		end)
		
		Connections["EnableJump"] = UserInputService.JumpRequest:Connect(function()
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
		end)
	end
end

local function ToggleTeleportWalk()
	if TeleportWalk then
		LocalPlayer.Character.Humanoid.WalkSpeed = 16

		Connections["TeleportWalk"] = RunService.Stepped:Connect(function()
			if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") and LocalPlayer.Character.Humanoid.MoveDirection.Magnitude > 0 then
				LocalPlayer.Character:TranslateBy(LocalPlayer.Character.Humanoid.MoveDirection * (WalkSpeed/60))
			end
		end) 
	else
		Connections["TeleportWalk"]:Disconnect()

		if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
			LocalPlayer.Character.Humanoid.WalkSpeed = WalkSpeed
		else
			LocalPlayer.CharacterAdded:Wait()
			local Humanoid = LocalPlayer.Character:WaitForChild("Humanoid")

			if Humanoid then
				Humanoid.WalkSpeed = WalkSpeed
			end
		end
	end
end

local function ToggleFly()
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
		local Humanoid = LocalPlayer.Character.Humanoid

		if Connections["Gravity"] then
			Connections["Gravity"]:Disconnect()
		end

		if Fly then
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp, false)
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, false)

			Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)

			Connections["Gravity"] = RunService.Stepped:Connect(function()
				workspace.Gravity = 0
			end)
		else
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp, true)
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)

			workspace.Gravity = 196.2
		end
	end
end

local function ToggleFollow(Victim)
	if Connections["Follow"] then
		Connections["Follow"]:Disconnect()
	end
	
	OriginalCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
	
	Connections["Follow"] = RunService.Stepped:Connect(function()
		LocalPlayer.Character:PivotTo(Victim.Character.HumanoidRootPart.CFrame)
	end)
end

local function ToggleNoClip()
	if LocalPlayer.Character then
		if NoClip then
			Connections["NoClipping"] = RunService.Stepped:Connect(function()
				if LocalPlayer.Character then
					for i, Descendant in ipairs(LocalPlayer.Character:GetDescendants()) do
						if Descendant:IsA("BasePart") and Descendant.CanCollide == true then
							Descendant.CanCollide = false
						end
					end
				end
			end)
		else
			Connections["NoClipping"]:Disconnect()
		end
	end
end

local function ToggleGravity(Value)
	if Connections["Gravity"] then
		Connections["Gravity"]:Disconnect()
	end

	Connections["Gravity"] = RunService.Stepped:Connect(function()
		workspace.Gravity = Value
	end)
end

--//Functions
Player:Slider("WalkSpeed",{
	min = 16; 
	max = 1000; 
},function(Value)
	ToggleSpeed(Value)
end)

Player:Slider("JumpHeight",{
	min = 7.2; 
	max = 1000; 
},function(Value)
	ToggleJump(Value)
end)

Player:Button("Reset All", function()
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
		local Humanoid = LocalPlayer.Character.Humanoid

		if Connections["WalkSpeed"] then
			Connections["WalkSpeed"]:Disconnect()
		end

		if Connections["JumpHeight"] then
			Connections["JumpHeight"]:Disconnect()
		end
		
		if Connections["EnableJump"] then
			Connections["EnableJump"]:Disconnect()
		end

		Humanoid.WalkSpeed = 16
		Humanoid.JumpHeight = 7.2
	end
end)

Player:Toggle("TeleportWalk",function(Bool) 
	TeleportWalk = Bool 

	ToggleTeleportWalk()		
end)

Player:Toggle("Fly",function(Bool) 
	Fly = Bool 

	ToggleFly()		
end)

local Teleport = Player:Dropdown("Teleport", Players:GetChildren(), false, function(Option)
	local Victim = Players:FindFirstChild(Option)

	if Victim and Victim.Character and Victim.Character:FindFirstChild("HumanoidRootPart") then
		LocalPlayer.Character:PivotTo(Victim.Character.HumanoidRootPart.CFrame)
	end
end)

local Follow = Player:Dropdown("Follow", Players:GetChildren(), false, function(Option)
	local Victim = Players:FindFirstChild(Option)

	if Victim and Victim.Character and Victim.Character:FindFirstChild("HumanoidRootPart") then
		ToggleFollow(Victim)
	end
end)

Player:Button("UnFollow", function()
	if Connections["Follow"] then
		Connections["Follow"]:Disconnect()
	end
	
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
		LocalPlayer.Character:PivotTo(OriginalCFrame)
	end
end)

local Spectate = Player:Dropdown("Spectate", Players:GetChildren(), false, function(Option)
	local Victim = Players:FindFirstChild(Option)

	if Victim and Victim.Character and Victim.Character:FindFirstChild("Humanoid") then
		workspace.CurrentCamera.CameraSubject = Victim.Character.Humanoid
	end
end)

Player:Button("UnSpectate", function()
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
		workspace.CurrentCamera.CameraSubject = LocalPlayer.Character
	end
end)

Explorer:Toggle("NoClip",function(Bool) 
	NoClip = Bool 

	ToggleNoClip()
end)

Explorer:Slider("Gravity",{
	min = 0; 
	max = 1000; 
},function(Value)
	if not Fly then
		ToggleGravity(Value)
	end
end)

Explorer:Button("Reset All", function()
	if not Fly and Connections["Gravity"] then
		Connections["Gravity"]:Disconnect()

		workspace.Gravity = 196.2
	end
end)

Players.PlayerAdded:Connect(function()
	Teleport:Refresh(Players:GetPlayers())
	Follow:Refresh(Players:GetPlayers())
	Spectate:Refresh(Players:GetPlayers())
end)

Players.PlayerRemoving:Connect(function()
	Teleport:Refresh(Players:GetPlayers())
	Follow:Refresh(Players:GetPlayers())
	Spectate:Refresh(Players:GetPlayers())
end)
